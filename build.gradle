plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.sonarqube" version "6.0.1.5171"
}

group = 'com.medplus.service'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
test.finalizedBy jacocoTestReport
jacoco {
	toolVersion = "0.8.13" // or latest available
}

jacocoTestReport {
	dependsOn test // run tests before generating report

	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}
repositories {
	mavenCentral()
}

sonarqube {
	properties {
		property "sonar.projectKey", "user-app"
		property "sonar.projectName", "user-app"
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.login", "sqp_5c6043f69787a457b02c195d0b9223f716c17104"
	}
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
